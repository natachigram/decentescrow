-- ENHANCED ESCROW DEPLOYMENT SCRIPT
-- Updated version with DAT token pre-whitelisting
print("================================================================================")
print("                    ENHANCED ESCROW CONTRACT DEPLOYMENT")
print("================================================================================")

-- Check environment
print("\nüîß ENVIRONMENT CHECK")
print("Process ID: " .. ao.id)

-- Test JSON availability
local json_available = false
local status, result = pcall(function() return require('json') end)
if status then
    json = result
    json_available = true
    print("‚úì JSON library is available")
else
    print("‚ö† JSON library not available - deployment will still work")
    -- Create minimal JSON mock for compatibility
    json = {
        encode = function(data) return tostring(data) end,
        decode = function(str) return str end
    }
end

print("\nüìã DEPLOYMENT CONFIGURATION")
local ESCROW_PROCESS = ao.id
local DAT_TOKEN = 'Ve4nk2QjJK9UGNmV_edrsfhFtDq9FkS8TcOkJ0zKN9I'
local TREASURY_ADDR = 'GnLIInpSLP_izxsd38t81JNbKy-SLJ2aDMVd6YPesOU'

print("üìç Escrow Process: " .. ESCROW_PROCESS)
print("ü™ô DAT Token: " .. DAT_TOKEN)
print("üè¶ Treasury: " .. TREASURY_ADDR)

print("\nüöÄ LOADING ENHANCED ESCROW CONTRACT...")

-- Load the complete escrow contract from ao/escrow.lua
-- This includes the DAT token auto-whitelist feature
local escrow_path = ".load ao/escrow.lua"
print("üìÇ Loading contract from: ao/escrow.lua")

-- The contract will automatically:
-- 1. Initialize DAT token in allowlist
-- 2. Set DAT as default token
-- 3. Set up all handlers
-- 4. Configure fee structure

print("‚úÖ Enhanced escrow contract loaded!")

print("\n‚öôÔ∏è POST-DEPLOYMENT SETUP")

-- Initialize owner (this should be done first)
print("üë§ Setting contract owner...")
print("Run this command to initialize owner:")
print("Send({Target = '" .. ESCROW_PROCESS .. "', Action = 'InitOwner'})")

print("\nüîß Setting platform configuration...")
print("Run this command to set platform config:")
print("Send({")
print("  Target = '" .. ESCROW_PROCESS .. "',")
print("  Action = 'SetConfig',")
print("  platformFeeBps = '100',")
print("  platformTreasury = '" .. TREASURY_ADDR .. "'")
print("})")

print("\nüìä VERIFICATION COMMANDS")
print("Use these commands to verify deployment:")

print("\n1. Check configuration:")
print("Send({Target = '" .. ESCROW_PROCESS .. "', Action = 'GetConfig'})")

print("\n2. List allowed tokens (should include DAT):")
print("Send({Target = '" .. ESCROW_PROCESS .. "', Action = 'ListAllowedTokens'})")

print("\n3. Check DAT token balance:")
print("Send({Target = '" .. DAT_TOKEN .. "', Action = 'Balance', Address = '" .. ESCROW_PROCESS .. "'})")

print("\nüí∞ TESTING WORKFLOW")
print("Complete test workflow commands:")

print("\n1. Client approves escrow to spend DAT:")
print("Send({")
print("  Target = '" .. DAT_TOKEN .. "',")
print("  Action = 'Approve',")
print("  Spender = '" .. ESCROW_PROCESS .. "',")
print("  Quantity = '1000000000000000000'")
print("})")

print("\n2. Create a job:")
print("Send({")
print("  Target = '" .. ESCROW_PROCESS .. "',")
print("  Action = 'Deposit',")
print("  jobId = 'job_test_" .. os.time() .. "',")
print("  client = ao.id,")
print("  token = '" .. DAT_TOKEN .. "',")
print("  amount = '1000000000000000000',")
print("  meta = 'Test job deployment'")
print("})")

print("\n3. Assign freelancer:")
print("Send({")
print("  Target = '" .. ESCROW_PROCESS .. "',")
print("  Action = 'AssignFreelancer',")
print("  jobId = 'job_test_" .. os.time() .. "',")
print("  freelancer = 'FREELANCER_ADDRESS_HERE'")
print("})")

print("\n4. Release funds:")
print("Send({")
print("  Target = '" .. ESCROW_PROCESS .. "',")
print("  Action = 'Release',")
print("  jobId = 'job_test_" .. os.time() .. "'")
print("})")

print("\n" .. string.rep("=", 80))
print("üéØ DEPLOYMENT FEATURES")
print("‚úÖ DAT token automatically whitelisted")
print("‚úÖ 1% platform fee (100 basis points)")
print("‚úÖ Treasury configured for fee collection")
print("‚úÖ Complete escrow workflow available")
print("‚úÖ Secure allowlist system")
print("‚úÖ Precise big-integer math for payments")

print("\nüîÑ NEXT STEPS")
print("1. Run the InitOwner command above")
print("2. Run the SetConfig command above")
print("3. Verify with the verification commands")
print("4. Test with the workflow commands")

print("\n‚úÖ ENHANCED ESCROW DEPLOYMENT COMPLETE!")
print("================================================================================")

-- Helper function for deployment status
function deploymentStatus()
    print("\nüìä DEPLOYMENT STATUS")
    print("Process ID: " .. ao.id)
    print("Ready for initialization commands")
    print("\nNext: Send InitOwner action")
end
